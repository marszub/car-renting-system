package pl.agh.edu.cardatabase.rentalContract;

import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.*;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class Rental extends Contract {
    public static final String BINARY = "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001805534801561005457600080fd5b50611421806100646000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806317c39286146100675780634cf2010e146100855780637e26b816146100a157806385a32bc4146100d1578063b31c0a9a146100ed578063f2645dbe1461011d575b600080fd5b61006f61013c565b60405161007c9190610c59565b60405180910390f35b61009f600480360381019061009a9190610cac565b61019c565b005b6100bb60048036038101906100b69190610cac565b610219565b6040516100c89190610dcb565b60405180910390f35b6100eb60048036038101906100e69190610de6565b610413565b005b61010760048036038101906101029190610e26565b610666565b6040516101149190610e88565b60405180910390f35b6101256107d9565b604051610133929190610f6d565b60405180910390f35b606061014661092f565b600280548060200260200160405190810160405280929190818152602001828054801561019257602002820191906000526020600020905b81548152602001906001019080831161017e575b5050505050905090565b6101a461092f565b6101ad816109bf565b156101ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e490611001565b60405180910390fd5b600281908060018154018082558091505060019003906000526020600020016000909190919091505550565b610221610b49565b600060058054905090505b60008111156103d2578260056001836102459190611050565b8154811061025657610255611084565b5b906000526020600020906006020160020154036103bf576001808111156102805761027f610cd9565b5b600560018361028f9190611050565b815481106102a05761029f611084565b5b906000526020600020906006020160050160009054906101000a900460ff1660018111156102d1576102d0610cd9565b5b03610311576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610308906110ff565b60405180910390fd5b60056001826103209190611050565b8154811061033157610330611084565b5b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1660018111156103a1576103a0610cd9565b5b60018111156103b3576103b2610cd9565b5b8152505091505061040e565b80806103ca9061111f565b91505061022c565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610405906110ff565b60405180910390fd5b919050565b61041c82610a21565b61045b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045290611194565b60405180910390fd5b61046482610a41565b6104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a90611226565b60405180910390fd5b600060056003600085815260200190815260200160002054815481106104cc576104cb611084565b5b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16600181111561053c5761053b610cd9565b5b600181111561054e5761054d610cd9565b5b81525050905060006040518060c0016040528084815260200183602001518152602001836040015181526020014281526020018360800151815260200160018081111561059e5761059d610cd9565b5b81525090506005819080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083600181111561062c5761062b610cd9565b5b0217905550505060016005805490506106459190611050565b60046000846080015181526020019081526020016000208190555050505050565b6000610671836109bf565b6106b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a790611292565b60405180910390fd5b60006040518060c001604052808681526020018581526020018481526020014281526020016001548152602001600060018111156106f1576106f0610cd9565b5b81525090506005819080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083600181111561077f5761077e610cd9565b5b0217905550505060016005805490506107989190611050565b6003600060015481526020019081526020016000208190555060018060008282546107c391906112b2565b9250508190555080608001519150509392505050565b606080600060028054905067ffffffffffffffff8111156107fd576107fc611308565b5b60405190808252806020026020018201604052801561082b5781602001602082028036833780820191505090505b50905060005b6002805490508110156108d0576108656002828154811061085557610854611084565b5b9060005260206000200154610a61565b61089557600082828151811061087e5761087d611084565b5b6020026020010190151590811515815250506108bd565b60018282815181106108aa576108a9611084565b5b6020026020010190151590811515815250505b80806108c890611337565b915050610831565b506002818180548060200260200160405190810160405280929190818152602001828054801561091f57602002820191906000526020600020905b81548152602001906001019080831161090b575b5050505050915092509250509091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b4906113cb565b60405180910390fd5b565b600080600090505b600280549050811015610a165782600282815481106109e9576109e8611084565b5b906000526020600020015403610a03576001915050610a1c565b8080610a0e90611337565b9150506109c7565b50600090505b919050565b600080600360008481526020019081526020016000205414159050919050565b600080600460008481526020019081526020016000205414159050919050565b60008060058054905090505b6000811115610b3e57826005600183610a869190611050565b81548110610a9757610a96611084565b5b90600052602060002090600602016001015403610b2b57600180811115610ac157610ac0610cd9565b5b6005600183610ad09190611050565b81548110610ae157610ae0611084565b5b906000526020600020906006020160050160009054906101000a900460ff166001811115610b1257610b11610cd9565b5b03610b21576000915050610b44565b6001915050610b44565b8080610b369061111f565b915050610a6d565b50600090505b919050565b6040518060c00160405280600081526020016000815260200160008152602001600081526020016000815260200160006001811115610b8b57610b8a610cd9565b5b81525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b610bd081610bbd565b82525050565b6000610be28383610bc7565b60208301905092915050565b6000602082019050919050565b6000610c0682610b91565b610c108185610b9c565b9350610c1b83610bad565b8060005b83811015610c4c578151610c338882610bd6565b9750610c3e83610bee565b925050600181019050610c1f565b5085935050505092915050565b60006020820190508181036000830152610c738184610bfb565b905092915050565b600080fd5b610c8981610bbd565b8114610c9457600080fd5b50565b600081359050610ca681610c80565b92915050565b600060208284031215610cc257610cc1610c7b565b5b6000610cd084828501610c97565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610d1957610d18610cd9565b5b50565b6000819050610d2a82610d08565b919050565b6000610d3a82610d1c565b9050919050565b610d4a81610d2f565b82525050565b60c082016000820151610d666000850182610bc7565b506020820151610d796020850182610bc7565b506040820151610d8c6040850182610bc7565b506060820151610d9f6060850182610bc7565b506080820151610db26080850182610bc7565b5060a0820151610dc560a0850182610d41565b50505050565b600060c082019050610de06000830184610d50565b92915050565b60008060408385031215610dfd57610dfc610c7b565b5b6000610e0b85828601610c97565b9250506020610e1c85828601610c97565b9150509250929050565b600080600060608486031215610e3f57610e3e610c7b565b5b6000610e4d86828701610c97565b9350506020610e5e86828701610c97565b9250506040610e6f86828701610c97565b9150509250925092565b610e8281610bbd565b82525050565b6000602082019050610e9d6000830184610e79565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008115159050919050565b610ee481610ecf565b82525050565b6000610ef68383610edb565b60208301905092915050565b6000602082019050919050565b6000610f1a82610ea3565b610f248185610eae565b9350610f2f83610ebf565b8060005b83811015610f60578151610f478882610eea565b9750610f5283610f02565b925050600181019050610f33565b5085935050505092915050565b60006040820190508181036000830152610f878185610bfb565b90508181036020830152610f9b8184610f0f565b90509392505050565b600082825260208201905092915050565b7f43617220616c7265616479206578697374732100000000000000000000000000600082015250565b6000610feb601383610fa4565b9150610ff682610fb5565b602082019050919050565b6000602082019050818103600083015261101a81610fde565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061105b82610bbd565b915061106683610bbd565b92508282101561107957611078611021565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e6f206163746976652072656e74616c207265636f7264000000000000000000600082015250565b60006110e9601783610fa4565b91506110f4826110b3565b602082019050919050565b60006020820190508181036000830152611118816110dc565b9050919050565b600061112a82610bbd565b91506000820361113d5761113c611021565b5b600182039050919050565b7f4e6f2072656e74616c2077697468207468617420494420737461727465640000600082015250565b600061117e601e83610fa4565b915061118982611148565b602082019050919050565b600060208201905081810360008301526111ad81611171565b9050919050565b7f52656e74616c207769746820746861742049442068617320616c72656164792060008201527f656e646564000000000000000000000000000000000000000000000000000000602082015250565b6000611210602583610fa4565b915061121b826111b4565b604082019050919050565b6000602082019050818103600083015261123f81611203565b9050919050565b7f43617220646f6573206e6f742065786973742100000000000000000000000000600082015250565b600061127c601383610fa4565b915061128782611246565b602082019050919050565b600060208201905081810360008301526112ab8161126f565b9050919050565b60006112bd82610bbd565b91506112c883610bbd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112fd576112fc611021565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061134282610bbd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361137457611373611021565b5b600182019050919050565b7f41636365732064656e696564202d206e6f2061646d696e206163636573730000600082015250565b60006113b5601e83610fa4565b91506113c08261137f565b602082019050919050565b600060208201905081810360008301526113e4816113a8565b905091905056fea2646970667358221220a76737e5b01fa292e49104baebc294d5c6e7bb8110a9131afbc0451bd5d7696864736f6c634300080e0033";

    public static final String FUNC_ADDCAR = "addCar";

    public static final String FUNC_GETCARS = "getCars";

    public static final String FUNC_STARTRENTAL = "startRental";

    public static final String FUNC_ENDRENTAL = "endRental";

    public static final String FUNC_GETACTIVERENTAL = "getActiveRental";

    public static final String FUNC_GETALLAVAILABLECARS = "getAllAvailableCars";

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("5777", "0xEe3E92973010664a804BF96188ac4766fb84A3B9");
    }

    @Deprecated
    protected Rental(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Rental(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Rental(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Rental(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> addCar(BigInteger _carID) {
        final Function function = new Function(
                FUNC_ADDCAR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_carID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getCars() {
        final Function function = new Function(FUNC_GETCARS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint256>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> startRental(BigInteger _rentTime, BigInteger _carID, BigInteger _userID) {
        final Function function = new Function(
                FUNC_STARTRENTAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_rentTime), 
                new org.web3j.abi.datatypes.generated.Uint256(_carID), 
                new org.web3j.abi.datatypes.generated.Uint256(_userID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> endRental(BigInteger rentalID, BigInteger _endRentTime) {
        final Function function = new Function(
                FUNC_ENDRENTAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(rentalID), 
                new org.web3j.abi.datatypes.generated.Uint256(_endRentTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<RentalRecord> getActiveRental(BigInteger _userID) {
        final Function function = new Function(FUNC_GETACTIVERENTAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_userID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<RentalRecord>() {}));
        return executeRemoteCallSingleValueReturn(function, RentalRecord.class);
    }

    public RemoteFunctionCall<Tuple2<List<BigInteger>, List<Boolean>>> getAllAvailableCars() {
        final Function function = new Function(FUNC_GETALLAVAILABLECARS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint256>>() {}, new TypeReference<DynamicArray<Bool>>() {}));
        return new RemoteFunctionCall<Tuple2<List<BigInteger>, List<Boolean>>>(function,
                new Callable<Tuple2<List<BigInteger>, List<Boolean>>>() {
                    @Override
                    public Tuple2<List<BigInteger>, List<Boolean>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<List<BigInteger>, List<Boolean>>(
                                convertToNative((List<Uint256>) results.get(0).getValue()), 
                                convertToNative((List<Bool>) results.get(1).getValue()));
                    }
                });
    }

    @Deprecated
    public static Rental load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Rental(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Rental load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Rental(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Rental load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Rental(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Rental load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Rental(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Rental> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Rental.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Rental> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Rental.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<Rental> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Rental.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Rental> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Rental.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class RentalRecord extends StaticStruct {
        public BigInteger rentTime;

        public BigInteger carID;

        public BigInteger userID;

        public BigInteger blockchainTime;

        public BigInteger rentalID;

        public BigInteger rentalState;

        public RentalRecord(BigInteger rentTime, BigInteger carID, BigInteger userID, BigInteger blockchainTime, BigInteger rentalID, BigInteger rentalState) {
            super(new org.web3j.abi.datatypes.generated.Uint256(rentTime),new org.web3j.abi.datatypes.generated.Uint256(carID),new org.web3j.abi.datatypes.generated.Uint256(userID),new org.web3j.abi.datatypes.generated.Uint256(blockchainTime),new org.web3j.abi.datatypes.generated.Uint256(rentalID),new org.web3j.abi.datatypes.generated.Uint8(rentalState));
            this.rentTime = rentTime;
            this.carID = carID;
            this.userID = userID;
            this.blockchainTime = blockchainTime;
            this.rentalID = rentalID;
            this.rentalState = rentalState;
        }

        public RentalRecord(Uint256 rentTime, Uint256 carID, Uint256 userID, Uint256 blockchainTime, Uint256 rentalID, Uint8 rentalState) {
            super(rentTime,carID,userID,blockchainTime,rentalID,rentalState);
            this.rentTime = rentTime.getValue();
            this.carID = carID.getValue();
            this.userID = userID.getValue();
            this.blockchainTime = blockchainTime.getValue();
            this.rentalID = rentalID.getValue();
            this.rentalState = rentalState.getValue();
        }
    }
}
